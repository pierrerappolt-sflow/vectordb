---
apiVersion: v1
kind: Service
metadata:
  name: search
  namespace: vdb
  labels:
    app: search
spec:
  ports:
    - port: 8001
      targetPort: 8001
      name: http
  selector:
    app: search

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
  namespace: vdb
  labels:
    app: search
spec:
  replicas: 1
  selector:
    matchLabels:
      app: search
  template:
    metadata:
      labels:
        app: search
    spec:
      initContainers:
        # Wait for app-postgres to be ready
        - name: wait-for-postgres
          image: postgres:16-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h app-postgres -U vdbuser -d vectordb; do
                echo "Waiting for app-postgres...";
                sleep 2;
              done
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: vdb-secrets
                  key: POSTGRES_PASSWORD
      containers:
        - name: search
          image: us-central1-docker.pkg.dev/ci-dev-376017/vdb-images/vdb-search:latest
          imagePullPolicy: IfNotPresent
          command:
            - uv
            - run
            - --directory
            - /workspace
            - python
            - -m
            - search_service.main
          ports:
            - containerPort: 8001
              name: http
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: vdb-secrets
                  key: DATABASE_URL
            - name: API_HOST
              valueFrom:
                configMapKeyRef:
                  name: vdb-config
                  key: API_HOST
            - name: API_PORT
              valueFrom:
                configMapKeyRef:
                  name: vdb-config
                  key: API_PORT
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
            limits:
              memory: "8Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 5
      restartPolicy: Always
