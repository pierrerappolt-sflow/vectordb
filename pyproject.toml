[tool.uv.workspace]
members = [
    "packages/core",
    "apps/api",
    "apps/sdk"
]

[tool.uv]
dev-dependencies = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-watch>=4.2.0",
    "bandit>=1.7.0",
    "vulture>=2.11",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py313"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203",   # one-blank-line-before-class (conflicts with D211)
    "D213",   # multi-line-summary-second-line (conflicts with D212)
    "COM812", # missing-trailing-comma (conflicts with formatter)
    "ISC001", # single-line-implicit-string-concatenation (conflicts with formatter)
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = [
    "S101",     # Use of assert (expected in tests)
    "PLR2004",  # Magic values (expected in tests)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
strict = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
strict = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "packages/core/tests",
    "apps/api/tests",
    "apps/sdk/tests",
]
python_files = ["*_test.py", "test_*.py"]
